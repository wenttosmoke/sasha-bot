import asyncio
import os
import random
from datetime import datetime, timedelta
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import FSInputFile
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
API_TOKEN = os.getenv("API_TOKEN")
USER_ID = int(os.getenv("USER_ID")) # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
GROUP_ID = int(os.getenv("GROUP_ID"))

WEBHOOK_HOST = "https://sasha-bot-lwjs.onrender.com"  # üåê –£–∫–∞–∂–∏ —Å–≤–æ–π –¥–æ–º–µ–Ω (https –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

# === –û–±—ä–µ–∫—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ ===
sendToSasha = {

    "loveMessages":{
        "texts":[
            "–ø—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ, –æ—á–µ–Ω—å —Å–∫—É—á–∞—é –ø–æ —Ç–µ–±–µ. –Ω–∞–¥–µ—é—Å—å —Ç—ë–º–∞ —Ç–µ–±—è –Ω–µ —Ç–µ—Ä—Ä–æ—Ä–∏–∑–∏—Ä—É–µ—Çüòº",
            "–µ—Å–ª–∏ —Ç—ã –µ—â—ë –Ω–µ –∫—É—à–∞–ª–∞, —Ç–æ –±—ã—Å—Ç—Ä–æ, –≤–ø–µ—Ä—ë–¥. —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–Ω—è. –Ω–µ –±–µ—Ä–∏ –Ω–∞ —Å–µ–±—è –º–Ω–æ–≥–æ. —Ç—ã –±–æ–ª—å—à–∞—è —É–º–Ω–∏—á–∫–∞‚ù§Ô∏è",
            "–î–ê –ü–û–ß–ï–ú–£ –¢–´ –¢–ê–ö–û–ô –ö–û–¢–ò–ö, –ê–û–ê–¶–ì–ê–¶–ì–ê–û–¶–ê–û–¶–ì–®"
        ],
        "withPhoto":[0, 1],
        "photos": [
            "img/love/1.jpg",
            "img/love/2.jpg",
            "img/love/3.jpg"
        ],
        "withSticker":[0, 1],
        "stickers": [
            "CAACAgIAAxkBAAMqaP4yLe6eCpv3MMdcWnz9yL6V-PUAAoMQAAIxr_BJtXsp4sjpYTw2BA",
            "CAACAgIAAxkBAAMsaP4yPGqu7-UsBzNyf0tfnz0Kd5cAAugSAAJSe-hIcGEwWdFvpbY2BA",
            "CAACAgIAAxkBAAMwaP4ypZlMlliVzM9UwGRjW83k4CkAAi4TAAJjJvlLmSS4X7Q-mfs2BA",
            "CAACAgIAAxkBAAMyaP4ysQABpDMGVXi7m88M4bvdDUDaAALGFwAClLUYS5sPFDYCsujLNgQ",
            "CAACAgIAAxkBAAM0aP4ywPcUwscM6JdOLpY2cIZHP38AAvYqAAJgAThKTsUPg_bmNkM2BA",
            "CAACAgIAAxkBAAM2aP4y0gy21yYZAcuvbdFzqhlgqW4AAvQTAALB2_BIIe42z51nJmE2BA",
            "CAACAgIAAxkBAAM4aP4y6J95jLWjlrth-mxoVix4CNkAAhERAAKwg-lI0VH510R4Wxo2BA",
            "CAACAgIAAxkBAAM6aP4y-amg-1tcPKQL2UNEeRs0XgQAAq4QAAKPuvBIiqcvsvPoPtQ2BA"    
        ]
    },
    "jokeMessages":{
        "texts":[
            "—è –≤ –∞—Ä–º–∏–∏ –±—É–∫–≤–∞–ª—å–Ω–æ: \"–∑–∞ —á—Ç–æ –º—É—Ç, —Å—É–∫–∏...\"",
            "–≤ –∞—Ä–º–∏–∏ —Ä–∞–¥—É–µ—Ç —Ç–æ–ª—å–∫–æ, —á—Ç–æ –º–æ—è –ø–æ–ø–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏üòà",
            "—Å–ø–∏—à—å?\n–¥–∞–∂–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –º–æ–≥—É —Ç–∞–∫–æ–µ –¥–µ–ª–∞—Ç—åüòàüòàüòà"
        ],
        "withPhoto":[0, 1],
        "photos":[
            "img/jokes/1.jpg",
            "img/jokes/2.jpg",
            "img/jokes/3.jpg"
        ],
        "withSticker":[0, 1],
        "stickers":[
            "CAACAgIAAxkBAAMuaP4yVzaGD0M0bBA4grmJLegtFvYAAsoEAAIcktIDPxEeanJ4Hu42BA",
            "CAACAgIAAxkBAAMoaP4yHnj4Z1VWO4KbOSm6TT6WIv0AAuEAA6mfVTnktVMswv4GDDYE",
            "CAACAgIAAxkBAAMmaP4yEsNeBwUebBHk29pnYk8UKGMAAjcrAALTvHhKjzprQyeafmI2BA",
            "CAACAgIAAxkBAAMkaP4x_Wri6oZTZfX1dB8_upOJ860AAiUQAAIrU_FI1qLfNubU_782BA",
            "CAACAgIAAxkBAAM8aP4zZKhgl3p7Ci8FJ4MyjVgEJbYAAiVYAAIwyThKYhGJOvp8LtE2BA",
            "CAACAgIAAxkBAAM-aP4zdCppMZ1ho3v16hlD5grINg4AAg8hAAJnWjBKu5OAVu9uDmM2BA",
            "CAACAgIAAxkBAANAaP4zgRkF_GnvGuUOdy_VR8baMZ4AAr4VAAJEvkFLMGSJ6b6FjjE2BA",
            "CAACAgIAAxkBAANCaP4zlTOTudUycIg1uKT81Uv97WEAAlUSAAIrb0FLAe_GwgVMtWw2BA"    
        ]
    },
    "regularMessages":{
        "texts":[
            "–ø—Ä–∏–≤–µ—Ç–∏–∫, –∫–∞–∫ –¥–∏–ø–ª–æ–º?",
            "–ø–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–æ–µ —Å–æ–ª–Ω—ã—à–∫–æ –∫–∞–∫ —Ç—ã –¥–æ–ª–∂–Ω–æ –≥—É–ª—è—Ç—å –∏ –¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º —É–ª—ã–±–∫–∏"
        ],
        "withPhoto":[0, 1],
        "photos":[
            "img/regular/1.jpg",
            "img/regular/2.jpg",
            "img/regular/3.jpg"
        ],
        "withSticker":[0, 1],
        "stickers":[
            "CAACAgIAAxkBAANEaP4z1eB7zHNsT2lNFoflgGs-LiQAAt0WAAJSq2FLRsEUugi7UBI2BA",
            "CAACAgIAAxkBAANGaP4z4mQnL4L45XJwwo_o8FBJRkAAAnkUAAJlUxhIRJoGxi3KttA2BA",
            "CAACAgIAAxkBAANIaP4z7D4SnQrjdzolEQZdnDOMjrAAAu4QAAI0RaBL0kA3lxJ96pg2BA"
        ]
    }
}
currentMessageToSend = {}

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
scheduler = AsyncIOScheduler()

async def keep_alive():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø–∏–Ω–≥—É–µ—Ç —Å–∞–π—Ç, —á—Ç–æ–±—ã Render –Ω–µ –≤—ã–∫–ª—é—á–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    while True:
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(WEBHOOK_HOST) as response:
                    if response.status == 200:
                        print(f"[{datetime.now()}] üîÅ –ü–∏–Ω–≥ —É—Å–ø–µ—à–µ–Ω.")
                    else:
                        print(f"[{datetime.now()}] ‚ö†Ô∏è –ü–∏–Ω–≥ –Ω–µ—É–¥–∞—á–µ–Ω: {response.status}")
        except Exception as e:
            print(f"[{datetime.now()}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∏–Ω–≥–µ: {e}")
        await asyncio.sleep(240)  # –∫–∞–∂–¥—ã–µ 4 –º–∏–Ω—É—Ç—ã

# === –§—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ ===
async def send_random_message():
    try:
        if "photo" in currentMessageToSend:
            await bot.send_photo(USER_ID, FSInputFile(currentMessageToSend["photo"]), caption=currentMessageToSend["text"])
            await bot.send_photo(GROUP_ID, FSInputFile(currentMessageToSend["photo"]), caption=currentMessageToSend["text"])
            del currentMessageToSend["photo"]
        else:
            await bot.send_message(USER_ID, text=currentMessageToSend["text"])
            await bot.send_message(GROUP_ID, text=currentMessageToSend["text"])
        if "sticker" in currentMessageToSend:
            await bot.send_sticker(USER_ID, sticker=currentMessageToSend["sticker"])
            await bot.send_sticker(GROUP_ID, sticker=currentMessageToSend["sticker"])
            del currentMessageToSend["sticker"]
        del currentMessageToSend["text"]
        print(f"[{datetime.now()}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        if "sticker" in currentMessageToSend:
            del currentMessageToSend["sticker"]
        if "text" in currentMessageToSend:
            del currentMessageToSend["text"]
        if "photo" in currentMessageToSend:
            del currentMessageToSend["photo"]

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    schedule_random_message()


def schedule_random_message():
    """–ü–ª–∞–Ω–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —Å–ª—É—á–∞–π–Ω—É—é –¥–∞—Ç—É/–≤—Ä–µ–º—è"""
    scheduler.remove_all_jobs()  # –æ—á–∏—â–∞–µ–º –ø—Ä–æ—à–ª–æ–µ –∑–∞–¥–∞–Ω–∏–µ
 
    # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è ‚Äî –æ—Ç 1 —á–∞—Å–∞ –¥–æ 2 –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥
    delta = timedelta(
        days=0,
        hours=1,
        minutes=0
        # days=random.randint(0, 7),
        # hours=random.randint(0, 23),
        # minutes=random.randint(0, 59)
    )
    
    run_time = datetime.now() + delta
    message = random.choice(list(sendToSasha.keys()))
    text = random.choice(sendToSasha[message]["texts"])
    sendToSasha[message]["texts"].remove(text)
    if random.choice(sendToSasha[message]["withPhoto"]) == 1:
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Ñ–æ—Ç–æ.")   
        currentMessageToSend["photo"] = random.choice(sendToSasha[message]["photos"])
        sendToSasha[message]["photos"].remove(currentMessageToSend["photo"])
    if random.choice(sendToSasha[message]["withSticker"]) == 1:
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ —Å—Ç–∏–∫–µ—Ä–æ–º.")
        currentMessageToSend["sticker"] = random.choice(sendToSasha[message]["stickers"])
    currentMessageToSend["text"] = text
    scheduler.add_job(send_random_message, "date", run_date=run_time)
    print(f"–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ {run_time}")


# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@dp.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer("–Ω—É —á—Ç–æ –∂, –µ—Å–ª–∏ —Ç—ã —ç—Ç–æ —á–∏—Ç–∞–µ—à—å, —Å–∞—à, —Ç–æ —è –≤–ª–∏–ø –≤ –¥–æ–ª–≥–∏.\n–µ–±–∞–Ω—ã–π –±–µ–ª–±–µ—Ç, —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω —Ä–æ–¥–∏–Ω–µ...\n–Ω–æ —á–∞—Å—Ç—å –º–æ–µ–≥–æ —Ä–∞–∑—É–º–∞ –æ—Å—Ç–∞–ª–∞—Å—å –∑–¥–µ—Å—å –∏ –æ–Ω–∞ —Å —Ç–æ–±–æ–π!\n–ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –±—É–¥–µ—Ç —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ–± –æ–¥–Ω–æ–π —Ç–≤–∞—Ä–∏, –∫–æ—Ç–æ—Ä–∞—è –¥—Ä–æ—á–∏—Ç –ø–∏—Å—å–∫–∏ –≤ –∞—Ä–º–∏–∏.\n–Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—èüòà")
    schedule_random_message()


@dp.message()
async def echo_msg(message: types.Message):
    await message.reply("—Ö—ã—Ö, —è –±—ã –æ—Ç–≤–µ—Ç–∏–ª, –Ω–æ —è –¥—Ä–æ—á—É –ø–∏—Å—å–∫–∏(\n–ø—Ä–æ—Å—Ç–∏, —Å–æ–ª–Ω—Ü–µ, —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É—Å—å!\n–Ω–∞–¥–µ—é—Å—å —É —Ç–µ–±—è –≤—Å—ë —Ö–æ—Ä–æ—à–æ")
    await bot.send_message(GROUP_ID, text="‚ùó‚ùó‚ùó –û–Ω–∞ –æ—Ç–≤–µ—Ç–∏–ª–∞ " + str(message.date)[:-6] + " ‚ùó‚ùó‚ùó")
    await bot.forward_message(
        chat_id=GROUP_ID,          
        from_chat_id=message.chat.id,  
        message_id=message.message_id
    )


# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
async def main():
    scheduler.start()
    asyncio.create_task(keep_alive())
    await bot.delete_webhook(drop_pending_updates=True)
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling)...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
